services:
  reverse-proxy:
    image: traefik:v3.4
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=merididiofficial@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: meridi-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`api.merididi.com`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
    restart: unless-stopped
    volumes:
      - fastapi_data:/app/data/
    env_file:
      - .env
        #expose:
        #- "8000:8000"
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    container_name: postgres-db
    restart: unless-stopped
    env_file:
      - .env.db
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"

 
volumes:
  fastapi_data:
  pgdata:
  letsencrypt:
